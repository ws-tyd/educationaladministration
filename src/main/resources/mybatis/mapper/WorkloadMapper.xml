<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hngy.educationaladministration.mapper.WorkloadMapper">
  <resultMap id="BaseResultMap" type="com.hngy.educationaladministration.entity.Workload">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="id_teacher" jdbcType="BIGINT" property="idTeacher" />
    <result column="year" jdbcType="VARCHAR" property="year" />
    <result column="term" jdbcType="VARCHAR" property="term" />
    <result column="sum1" jdbcType="REAL" property="sum1" />
    <result column="sum2" jdbcType="REAL" property="sum2" />
    <result column="sum1AddSum2" jdbcType="REAL" property="sum1addsum2" />
    <result column="rsrWorkload" jdbcType="REAL" property="rsrworkload" />
    <result column="subsidyworkload" jdbcType="REAL" property="subsidyworkload" />
    <result column="totalSum" jdbcType="REAL" property="totalsum" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hngy.educationaladministration.entity.WorkloadWithBLOBs">
    <result column="classes" jdbcType="LONGVARCHAR" property="classes" />
    <result column="courseName" jdbcType="LONGVARCHAR" property="coursename" />
    <result column="classHourOfPlan" jdbcType="LONGVARCHAR" property="classhourofplan" />
    <result column="jointClass" jdbcType="LONGVARCHAR" property="jointclass" />
    <result column="extracurricularExperiment" jdbcType="LONGVARCHAR" property="extracurricularexperiment" />
    <result column="courseDesign" jdbcType="LONGVARCHAR" property="coursedesign" />
    <result column="on_campusPractice" jdbcType="LONGVARCHAR" property="onCampuspractice" />
    <result column="off_campusTraining" jdbcType="LONGVARCHAR" property="offCampustraining" />
    <result column="GraduationPractice" jdbcType="LONGVARCHAR" property="graduationpractice" />
    <result column="rsrProjectName" jdbcType="LONGVARCHAR" property="rsrprojectname" />
    <result column="rsrProjectBrief" jdbcType="LONGVARCHAR" property="rsrprojectbrief" />
    <result column="rsrProjectStatus" jdbcType="LONGVARCHAR" property="rsrprojectstatus" />
    <result column="rsrConversionWorkload" jdbcType="LONGVARCHAR" property="rsrconversionworkload" />
    <result column="rsrPProjectLeader" jdbcType="LONGVARCHAR" property="rsrpprojectleader" />
    <result column="sProjectName" jdbcType="LONGVARCHAR" property="sprojectname" />
    <result column="sProjectBrief" jdbcType="LONGVARCHAR" property="sprojectbrief" />
    <result column="sProjectStatus" jdbcType="LONGVARCHAR" property="sprojectstatus" />
    <result column="sConversionWorkload" jdbcType="LONGVARCHAR" property="sconversionworkload" />
    <result column="sPProjectLeader" jdbcType="LONGVARCHAR" property="spprojectleader" />
    <result column="sectionVerify" jdbcType="LONGVARCHAR" property="sectionverify" />
    <result column="instituteVerify" jdbcType="LONGVARCHAR" property="instituteverify" />
    <result column="bak1" jdbcType="LONGVARCHAR" property="bak1" />
    <result column="bak2" jdbcType="LONGVARCHAR" property="bak2" />
    <result column="bak3" jdbcType="LONGVARCHAR" property="bak3" />
    <result column="bak4" jdbcType="LONGVARCHAR" property="bak4" />
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, id_teacher, year, term, sum1, sum2, sum1AddSum2, rsrWorkload, subsidyworkload, 
    totalSum
  </sql>
  <sql id="Blob_Column_List">
    classes, courseName, classHourOfPlan, jointClass, extracurricularExperiment, courseDesign, 
    on_campusPractice, off_campusTraining, GraduationPractice, rsrProjectName, rsrProjectBrief, 
    rsrProjectStatus, rsrConversionWorkload, rsrPProjectLeader, sProjectName, sProjectBrief, 
    sProjectStatus, sConversionWorkload, sPProjectLeader, sectionVerify, instituteVerify, 
    bak1, bak2, bak3, bak4, remark
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.hngy.educationaladministration.entity.WorkloadExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_workload
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.hngy.educationaladministration.entity.WorkloadExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_workload
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
      </otherwise>
    </choose>
    from t_workload
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example != null and example.rows != null">
      <if test="example.offset != null">
        limit ${example.offset}, ${example.rows}
      </if>
      <if test="example.offset == null">
        limit ${example.rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_workload
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
      </otherwise>
    </choose>
    from t_workload
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_workload
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hngy.educationaladministration.entity.WorkloadExample">
    delete from t_workload
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hngy.educationaladministration.entity.WorkloadWithBLOBs">
    insert into t_workload (id, id_teacher, year, 
      term, sum1, sum2, sum1AddSum2, 
      rsrWorkload, subsidyworkload, totalSum, 
      classes, courseName, classHourOfPlan, 
      jointClass, extracurricularExperiment, 
      courseDesign, on_campusPractice, 
      off_campusTraining, GraduationPractice, 
      rsrProjectName, rsrProjectBrief, 
      rsrProjectStatus, rsrConversionWorkload, 
      rsrPProjectLeader, sProjectName, 
      sProjectBrief, sProjectStatus, 
      sConversionWorkload, sPProjectLeader, 
      sectionVerify, instituteVerify, 
      bak1, bak2, bak3, 
      bak4, remark)
    values (#{id,jdbcType=BIGINT}, #{idTeacher,jdbcType=BIGINT}, #{year,jdbcType=VARCHAR}, 
      #{term,jdbcType=VARCHAR}, #{sum1,jdbcType=REAL}, #{sum2,jdbcType=REAL}, #{sum1addsum2,jdbcType=REAL}, 
      #{rsrworkload,jdbcType=REAL}, #{subsidyworkload,jdbcType=REAL}, #{totalsum,jdbcType=REAL}, 
      #{classes,jdbcType=LONGVARCHAR}, #{coursename,jdbcType=LONGVARCHAR}, #{classhourofplan,jdbcType=LONGVARCHAR}, 
      #{jointclass,jdbcType=LONGVARCHAR}, #{extracurricularexperiment,jdbcType=LONGVARCHAR}, 
      #{coursedesign,jdbcType=LONGVARCHAR}, #{onCampuspractice,jdbcType=LONGVARCHAR}, 
      #{offCampustraining,jdbcType=LONGVARCHAR}, #{graduationpractice,jdbcType=LONGVARCHAR}, 
      #{rsrprojectname,jdbcType=LONGVARCHAR}, #{rsrprojectbrief,jdbcType=LONGVARCHAR}, 
      #{rsrprojectstatus,jdbcType=LONGVARCHAR}, #{rsrconversionworkload,jdbcType=LONGVARCHAR}, 
      #{rsrpprojectleader,jdbcType=LONGVARCHAR}, #{sprojectname,jdbcType=LONGVARCHAR}, 
      #{sprojectbrief,jdbcType=LONGVARCHAR}, #{sprojectstatus,jdbcType=LONGVARCHAR}, 
      #{sconversionworkload,jdbcType=LONGVARCHAR}, #{spprojectleader,jdbcType=LONGVARCHAR}, 
      #{sectionverify,jdbcType=LONGVARCHAR}, #{instituteverify,jdbcType=LONGVARCHAR}, 
      #{bak1,jdbcType=LONGVARCHAR}, #{bak2,jdbcType=LONGVARCHAR}, #{bak3,jdbcType=LONGVARCHAR}, 
      #{bak4,jdbcType=LONGVARCHAR}, #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hngy.educationaladministration.entity.WorkloadWithBLOBs">
    insert into t_workload
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="idTeacher != null">
        id_teacher,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="term != null">
        term,
      </if>
      <if test="sum1 != null">
        sum1,
      </if>
      <if test="sum2 != null">
        sum2,
      </if>
      <if test="sum1addsum2 != null">
        sum1AddSum2,
      </if>
      <if test="rsrworkload != null">
        rsrWorkload,
      </if>
      <if test="subsidyworkload != null">
        subsidyworkload,
      </if>
      <if test="totalsum != null">
        totalSum,
      </if>
      <if test="classes != null">
        classes,
      </if>
      <if test="coursename != null">
        courseName,
      </if>
      <if test="classhourofplan != null">
        classHourOfPlan,
      </if>
      <if test="jointclass != null">
        jointClass,
      </if>
      <if test="extracurricularexperiment != null">
        extracurricularExperiment,
      </if>
      <if test="coursedesign != null">
        courseDesign,
      </if>
      <if test="onCampuspractice != null">
        on_campusPractice,
      </if>
      <if test="offCampustraining != null">
        off_campusTraining,
      </if>
      <if test="graduationpractice != null">
        GraduationPractice,
      </if>
      <if test="rsrprojectname != null">
        rsrProjectName,
      </if>
      <if test="rsrprojectbrief != null">
        rsrProjectBrief,
      </if>
      <if test="rsrprojectstatus != null">
        rsrProjectStatus,
      </if>
      <if test="rsrconversionworkload != null">
        rsrConversionWorkload,
      </if>
      <if test="rsrpprojectleader != null">
        rsrPProjectLeader,
      </if>
      <if test="sprojectname != null">
        sProjectName,
      </if>
      <if test="sprojectbrief != null">
        sProjectBrief,
      </if>
      <if test="sprojectstatus != null">
        sProjectStatus,
      </if>
      <if test="sconversionworkload != null">
        sConversionWorkload,
      </if>
      <if test="spprojectleader != null">
        sPProjectLeader,
      </if>
      <if test="sectionverify != null">
        sectionVerify,
      </if>
      <if test="instituteverify != null">
        instituteVerify,
      </if>
      <if test="bak1 != null">
        bak1,
      </if>
      <if test="bak2 != null">
        bak2,
      </if>
      <if test="bak3 != null">
        bak3,
      </if>
      <if test="bak4 != null">
        bak4,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="idTeacher != null">
        #{idTeacher,jdbcType=BIGINT},
      </if>
      <if test="year != null">
        #{year,jdbcType=VARCHAR},
      </if>
      <if test="term != null">
        #{term,jdbcType=VARCHAR},
      </if>
      <if test="sum1 != null">
        #{sum1,jdbcType=REAL},
      </if>
      <if test="sum2 != null">
        #{sum2,jdbcType=REAL},
      </if>
      <if test="sum1addsum2 != null">
        #{sum1addsum2,jdbcType=REAL},
      </if>
      <if test="rsrworkload != null">
        #{rsrworkload,jdbcType=REAL},
      </if>
      <if test="subsidyworkload != null">
        #{subsidyworkload,jdbcType=REAL},
      </if>
      <if test="totalsum != null">
        #{totalsum,jdbcType=REAL},
      </if>
      <if test="classes != null">
        #{classes,jdbcType=LONGVARCHAR},
      </if>
      <if test="coursename != null">
        #{coursename,jdbcType=LONGVARCHAR},
      </if>
      <if test="classhourofplan != null">
        #{classhourofplan,jdbcType=LONGVARCHAR},
      </if>
      <if test="jointclass != null">
        #{jointclass,jdbcType=LONGVARCHAR},
      </if>
      <if test="extracurricularexperiment != null">
        #{extracurricularexperiment,jdbcType=LONGVARCHAR},
      </if>
      <if test="coursedesign != null">
        #{coursedesign,jdbcType=LONGVARCHAR},
      </if>
      <if test="onCampuspractice != null">
        #{onCampuspractice,jdbcType=LONGVARCHAR},
      </if>
      <if test="offCampustraining != null">
        #{offCampustraining,jdbcType=LONGVARCHAR},
      </if>
      <if test="graduationpractice != null">
        #{graduationpractice,jdbcType=LONGVARCHAR},
      </if>
      <if test="rsrprojectname != null">
        #{rsrprojectname,jdbcType=LONGVARCHAR},
      </if>
      <if test="rsrprojectbrief != null">
        #{rsrprojectbrief,jdbcType=LONGVARCHAR},
      </if>
      <if test="rsrprojectstatus != null">
        #{rsrprojectstatus,jdbcType=LONGVARCHAR},
      </if>
      <if test="rsrconversionworkload != null">
        #{rsrconversionworkload,jdbcType=LONGVARCHAR},
      </if>
      <if test="rsrpprojectleader != null">
        #{rsrpprojectleader,jdbcType=LONGVARCHAR},
      </if>
      <if test="sprojectname != null">
        #{sprojectname,jdbcType=LONGVARCHAR},
      </if>
      <if test="sprojectbrief != null">
        #{sprojectbrief,jdbcType=LONGVARCHAR},
      </if>
      <if test="sprojectstatus != null">
        #{sprojectstatus,jdbcType=LONGVARCHAR},
      </if>
      <if test="sconversionworkload != null">
        #{sconversionworkload,jdbcType=LONGVARCHAR},
      </if>
      <if test="spprojectleader != null">
        #{spprojectleader,jdbcType=LONGVARCHAR},
      </if>
      <if test="sectionverify != null">
        #{sectionverify,jdbcType=LONGVARCHAR},
      </if>
      <if test="instituteverify != null">
        #{instituteverify,jdbcType=LONGVARCHAR},
      </if>
      <if test="bak1 != null">
        #{bak1,jdbcType=LONGVARCHAR},
      </if>
      <if test="bak2 != null">
        #{bak2,jdbcType=LONGVARCHAR},
      </if>
      <if test="bak3 != null">
        #{bak3,jdbcType=LONGVARCHAR},
      </if>
      <if test="bak4 != null">
        #{bak4,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hngy.educationaladministration.entity.WorkloadExample" resultType="java.lang.Long">
    select count(*) from t_workload
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_workload
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.idTeacher != null">
        id_teacher = #{record.idTeacher,jdbcType=BIGINT},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=VARCHAR},
      </if>
      <if test="record.term != null">
        term = #{record.term,jdbcType=VARCHAR},
      </if>
      <if test="record.sum1 != null">
        sum1 = #{record.sum1,jdbcType=REAL},
      </if>
      <if test="record.sum2 != null">
        sum2 = #{record.sum2,jdbcType=REAL},
      </if>
      <if test="record.sum1addsum2 != null">
        sum1AddSum2 = #{record.sum1addsum2,jdbcType=REAL},
      </if>
      <if test="record.rsrworkload != null">
        rsrWorkload = #{record.rsrworkload,jdbcType=REAL},
      </if>
      <if test="record.subsidyworkload != null">
        subsidyworkload = #{record.subsidyworkload,jdbcType=REAL},
      </if>
      <if test="record.totalsum != null">
        totalSum = #{record.totalsum,jdbcType=REAL},
      </if>
      <if test="record.classes != null">
        classes = #{record.classes,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.coursename != null">
        courseName = #{record.coursename,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.classhourofplan != null">
        classHourOfPlan = #{record.classhourofplan,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.jointclass != null">
        jointClass = #{record.jointclass,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.extracurricularexperiment != null">
        extracurricularExperiment = #{record.extracurricularexperiment,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.coursedesign != null">
        courseDesign = #{record.coursedesign,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.onCampuspractice != null">
        on_campusPractice = #{record.onCampuspractice,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.offCampustraining != null">
        off_campusTraining = #{record.offCampustraining,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.graduationpractice != null">
        GraduationPractice = #{record.graduationpractice,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.rsrprojectname != null">
        rsrProjectName = #{record.rsrprojectname,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.rsrprojectbrief != null">
        rsrProjectBrief = #{record.rsrprojectbrief,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.rsrprojectstatus != null">
        rsrProjectStatus = #{record.rsrprojectstatus,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.rsrconversionworkload != null">
        rsrConversionWorkload = #{record.rsrconversionworkload,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.rsrpprojectleader != null">
        rsrPProjectLeader = #{record.rsrpprojectleader,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.sprojectname != null">
        sProjectName = #{record.sprojectname,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.sprojectbrief != null">
        sProjectBrief = #{record.sprojectbrief,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.sprojectstatus != null">
        sProjectStatus = #{record.sprojectstatus,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.sconversionworkload != null">
        sConversionWorkload = #{record.sconversionworkload,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.spprojectleader != null">
        sPProjectLeader = #{record.spprojectleader,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.sectionverify != null">
        sectionVerify = #{record.sectionverify,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.instituteverify != null">
        instituteVerify = #{record.instituteverify,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.bak1 != null">
        bak1 = #{record.bak1,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.bak2 != null">
        bak2 = #{record.bak2,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.bak3 != null">
        bak3 = #{record.bak3,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.bak4 != null">
        bak4 = #{record.bak4,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_workload
    set id = #{record.id,jdbcType=BIGINT},
      id_teacher = #{record.idTeacher,jdbcType=BIGINT},
      year = #{record.year,jdbcType=VARCHAR},
      term = #{record.term,jdbcType=VARCHAR},
      sum1 = #{record.sum1,jdbcType=REAL},
      sum2 = #{record.sum2,jdbcType=REAL},
      sum1AddSum2 = #{record.sum1addsum2,jdbcType=REAL},
      rsrWorkload = #{record.rsrworkload,jdbcType=REAL},
      subsidyworkload = #{record.subsidyworkload,jdbcType=REAL},
      totalSum = #{record.totalsum,jdbcType=REAL},
      classes = #{record.classes,jdbcType=LONGVARCHAR},
      courseName = #{record.coursename,jdbcType=LONGVARCHAR},
      classHourOfPlan = #{record.classhourofplan,jdbcType=LONGVARCHAR},
      jointClass = #{record.jointclass,jdbcType=LONGVARCHAR},
      extracurricularExperiment = #{record.extracurricularexperiment,jdbcType=LONGVARCHAR},
      courseDesign = #{record.coursedesign,jdbcType=LONGVARCHAR},
      on_campusPractice = #{record.onCampuspractice,jdbcType=LONGVARCHAR},
      off_campusTraining = #{record.offCampustraining,jdbcType=LONGVARCHAR},
      GraduationPractice = #{record.graduationpractice,jdbcType=LONGVARCHAR},
      rsrProjectName = #{record.rsrprojectname,jdbcType=LONGVARCHAR},
      rsrProjectBrief = #{record.rsrprojectbrief,jdbcType=LONGVARCHAR},
      rsrProjectStatus = #{record.rsrprojectstatus,jdbcType=LONGVARCHAR},
      rsrConversionWorkload = #{record.rsrconversionworkload,jdbcType=LONGVARCHAR},
      rsrPProjectLeader = #{record.rsrpprojectleader,jdbcType=LONGVARCHAR},
      sProjectName = #{record.sprojectname,jdbcType=LONGVARCHAR},
      sProjectBrief = #{record.sprojectbrief,jdbcType=LONGVARCHAR},
      sProjectStatus = #{record.sprojectstatus,jdbcType=LONGVARCHAR},
      sConversionWorkload = #{record.sconversionworkload,jdbcType=LONGVARCHAR},
      sPProjectLeader = #{record.spprojectleader,jdbcType=LONGVARCHAR},
      sectionVerify = #{record.sectionverify,jdbcType=LONGVARCHAR},
      instituteVerify = #{record.instituteverify,jdbcType=LONGVARCHAR},
      bak1 = #{record.bak1,jdbcType=LONGVARCHAR},
      bak2 = #{record.bak2,jdbcType=LONGVARCHAR},
      bak3 = #{record.bak3,jdbcType=LONGVARCHAR},
      bak4 = #{record.bak4,jdbcType=LONGVARCHAR},
      remark = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_workload
    set id = #{record.id,jdbcType=BIGINT},
      id_teacher = #{record.idTeacher,jdbcType=BIGINT},
      year = #{record.year,jdbcType=VARCHAR},
      term = #{record.term,jdbcType=VARCHAR},
      sum1 = #{record.sum1,jdbcType=REAL},
      sum2 = #{record.sum2,jdbcType=REAL},
      sum1AddSum2 = #{record.sum1addsum2,jdbcType=REAL},
      rsrWorkload = #{record.rsrworkload,jdbcType=REAL},
      subsidyworkload = #{record.subsidyworkload,jdbcType=REAL},
      totalSum = #{record.totalsum,jdbcType=REAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hngy.educationaladministration.entity.WorkloadWithBLOBs">
    update t_workload
    <set>
      <if test="idTeacher != null">
        id_teacher = #{idTeacher,jdbcType=BIGINT},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=VARCHAR},
      </if>
      <if test="term != null">
        term = #{term,jdbcType=VARCHAR},
      </if>
      <if test="sum1 != null">
        sum1 = #{sum1,jdbcType=REAL},
      </if>
      <if test="sum2 != null">
        sum2 = #{sum2,jdbcType=REAL},
      </if>
      <if test="sum1addsum2 != null">
        sum1AddSum2 = #{sum1addsum2,jdbcType=REAL},
      </if>
      <if test="rsrworkload != null">
        rsrWorkload = #{rsrworkload,jdbcType=REAL},
      </if>
      <if test="subsidyworkload != null">
        subsidyworkload = #{subsidyworkload,jdbcType=REAL},
      </if>
      <if test="totalsum != null">
        totalSum = #{totalsum,jdbcType=REAL},
      </if>
      <if test="classes != null">
        classes = #{classes,jdbcType=LONGVARCHAR},
      </if>
      <if test="coursename != null">
        courseName = #{coursename,jdbcType=LONGVARCHAR},
      </if>
      <if test="classhourofplan != null">
        classHourOfPlan = #{classhourofplan,jdbcType=LONGVARCHAR},
      </if>
      <if test="jointclass != null">
        jointClass = #{jointclass,jdbcType=LONGVARCHAR},
      </if>
      <if test="extracurricularexperiment != null">
        extracurricularExperiment = #{extracurricularexperiment,jdbcType=LONGVARCHAR},
      </if>
      <if test="coursedesign != null">
        courseDesign = #{coursedesign,jdbcType=LONGVARCHAR},
      </if>
      <if test="onCampuspractice != null">
        on_campusPractice = #{onCampuspractice,jdbcType=LONGVARCHAR},
      </if>
      <if test="offCampustraining != null">
        off_campusTraining = #{offCampustraining,jdbcType=LONGVARCHAR},
      </if>
      <if test="graduationpractice != null">
        GraduationPractice = #{graduationpractice,jdbcType=LONGVARCHAR},
      </if>
      <if test="rsrprojectname != null">
        rsrProjectName = #{rsrprojectname,jdbcType=LONGVARCHAR},
      </if>
      <if test="rsrprojectbrief != null">
        rsrProjectBrief = #{rsrprojectbrief,jdbcType=LONGVARCHAR},
      </if>
      <if test="rsrprojectstatus != null">
        rsrProjectStatus = #{rsrprojectstatus,jdbcType=LONGVARCHAR},
      </if>
      <if test="rsrconversionworkload != null">
        rsrConversionWorkload = #{rsrconversionworkload,jdbcType=LONGVARCHAR},
      </if>
      <if test="rsrpprojectleader != null">
        rsrPProjectLeader = #{rsrpprojectleader,jdbcType=LONGVARCHAR},
      </if>
      <if test="sprojectname != null">
        sProjectName = #{sprojectname,jdbcType=LONGVARCHAR},
      </if>
      <if test="sprojectbrief != null">
        sProjectBrief = #{sprojectbrief,jdbcType=LONGVARCHAR},
      </if>
      <if test="sprojectstatus != null">
        sProjectStatus = #{sprojectstatus,jdbcType=LONGVARCHAR},
      </if>
      <if test="sconversionworkload != null">
        sConversionWorkload = #{sconversionworkload,jdbcType=LONGVARCHAR},
      </if>
      <if test="spprojectleader != null">
        sPProjectLeader = #{spprojectleader,jdbcType=LONGVARCHAR},
      </if>
      <if test="sectionverify != null">
        sectionVerify = #{sectionverify,jdbcType=LONGVARCHAR},
      </if>
      <if test="instituteverify != null">
        instituteVerify = #{instituteverify,jdbcType=LONGVARCHAR},
      </if>
      <if test="bak1 != null">
        bak1 = #{bak1,jdbcType=LONGVARCHAR},
      </if>
      <if test="bak2 != null">
        bak2 = #{bak2,jdbcType=LONGVARCHAR},
      </if>
      <if test="bak3 != null">
        bak3 = #{bak3,jdbcType=LONGVARCHAR},
      </if>
      <if test="bak4 != null">
        bak4 = #{bak4,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hngy.educationaladministration.entity.WorkloadWithBLOBs">
    update t_workload
    set id_teacher = #{idTeacher,jdbcType=BIGINT},
      year = #{year,jdbcType=VARCHAR},
      term = #{term,jdbcType=VARCHAR},
      sum1 = #{sum1,jdbcType=REAL},
      sum2 = #{sum2,jdbcType=REAL},
      sum1AddSum2 = #{sum1addsum2,jdbcType=REAL},
      rsrWorkload = #{rsrworkload,jdbcType=REAL},
      subsidyworkload = #{subsidyworkload,jdbcType=REAL},
      totalSum = #{totalsum,jdbcType=REAL},
      classes = #{classes,jdbcType=LONGVARCHAR},
      courseName = #{coursename,jdbcType=LONGVARCHAR},
      classHourOfPlan = #{classhourofplan,jdbcType=LONGVARCHAR},
      jointClass = #{jointclass,jdbcType=LONGVARCHAR},
      extracurricularExperiment = #{extracurricularexperiment,jdbcType=LONGVARCHAR},
      courseDesign = #{coursedesign,jdbcType=LONGVARCHAR},
      on_campusPractice = #{onCampuspractice,jdbcType=LONGVARCHAR},
      off_campusTraining = #{offCampustraining,jdbcType=LONGVARCHAR},
      GraduationPractice = #{graduationpractice,jdbcType=LONGVARCHAR},
      rsrProjectName = #{rsrprojectname,jdbcType=LONGVARCHAR},
      rsrProjectBrief = #{rsrprojectbrief,jdbcType=LONGVARCHAR},
      rsrProjectStatus = #{rsrprojectstatus,jdbcType=LONGVARCHAR},
      rsrConversionWorkload = #{rsrconversionworkload,jdbcType=LONGVARCHAR},
      rsrPProjectLeader = #{rsrpprojectleader,jdbcType=LONGVARCHAR},
      sProjectName = #{sprojectname,jdbcType=LONGVARCHAR},
      sProjectBrief = #{sprojectbrief,jdbcType=LONGVARCHAR},
      sProjectStatus = #{sprojectstatus,jdbcType=LONGVARCHAR},
      sConversionWorkload = #{sconversionworkload,jdbcType=LONGVARCHAR},
      sPProjectLeader = #{spprojectleader,jdbcType=LONGVARCHAR},
      sectionVerify = #{sectionverify,jdbcType=LONGVARCHAR},
      instituteVerify = #{instituteverify,jdbcType=LONGVARCHAR},
      bak1 = #{bak1,jdbcType=LONGVARCHAR},
      bak2 = #{bak2,jdbcType=LONGVARCHAR},
      bak3 = #{bak3,jdbcType=LONGVARCHAR},
      bak4 = #{bak4,jdbcType=LONGVARCHAR},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hngy.educationaladministration.entity.Workload">
    update t_workload
    set id_teacher = #{idTeacher,jdbcType=BIGINT},
      year = #{year,jdbcType=VARCHAR},
      term = #{term,jdbcType=VARCHAR},
      sum1 = #{sum1,jdbcType=REAL},
      sum2 = #{sum2,jdbcType=REAL},
      sum1AddSum2 = #{sum1addsum2,jdbcType=REAL},
      rsrWorkload = #{rsrworkload,jdbcType=REAL},
      subsidyworkload = #{subsidyworkload,jdbcType=REAL},
      totalSum = #{totalsum,jdbcType=REAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.hngy.educationaladministration.entity.WorkloadExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_workload
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleWithBLOBs" parameterType="com.hngy.educationaladministration.entity.WorkloadExample" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_workload
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
      </otherwise>
    </choose>
    from t_workload
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
</mapper>