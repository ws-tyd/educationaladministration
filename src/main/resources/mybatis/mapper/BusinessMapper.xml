<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hngy.educationaladministration.mapper.BusinessMapper">
  <resultMap id="BaseResultMap" type="com.hngy.educationaladministration.entity.Business">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="id_teacher" jdbcType="BIGINT" property="idTeacher" />
    <result column="year" jdbcType="VARCHAR" property="year" />
    <result column="dateOfBirth" jdbcType="VARCHAR" property="dateofbirth" />
    <result column="trem" jdbcType="VARCHAR" property="trem" />
    <result column="theoryClass" jdbcType="VARCHAR" property="theoryclass" />
    <result column="guidingExperiment" jdbcType="VARCHAR" property="guidingexperiment" />
    <result column="guidingDesign" jdbcType="VARCHAR" property="guidingdesign" />
    <result column="guidingInternship" jdbcType="VARCHAR" property="guidinginternship" />
    <result column="guideComprehensiveExperiment" jdbcType="VARCHAR" property="guidecomprehensiveexperiment" />
    <result column="totalClass" jdbcType="VARCHAR" property="totalclass" />
    <result column="totalWorkload" jdbcType="VARCHAR" property="totalworkload" />
    <result column="chiefEditor" jdbcType="VARCHAR" property="chiefeditor" />
    <result column="jointlyEdited" jdbcType="VARCHAR" property="jointlyedited" />
    <result column="planningTextbook" jdbcType="VARCHAR" property="planningtextbook" />
    <result column="schoolBasedTextbook" jdbcType="VARCHAR" property="schoolbasedtextbook" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="ranking" jdbcType="VARCHAR" property="ranking" />
    <result column="hostSubject" jdbcType="VARCHAR" property="hostsubject" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="myRole" jdbcType="VARCHAR" property="myrole" />
    <result column="sick" jdbcType="VARCHAR" property="sick" />
    <result column="compassionateLeave" jdbcType="VARCHAR" property="compassionateleave" />
    <result column="beLate" jdbcType="INTEGER" property="belate" />
    <result column="leaveEarly" jdbcType="INTEGER" property="leaveearly" />
    <result column="tuneClass" jdbcType="INTEGER" property="tuneclass" />
    <result column="missingClass" jdbcType="INTEGER" property="missingclass" />
    <result column="disciplinaryPenalty" jdbcType="INTEGER" property="disciplinarypenalty" />
    <result column="teachingOpinion" jdbcType="VARCHAR" property="teachingopinion" />
    <result column="departmentOpinion" jdbcType="VARCHAR" property="departmentopinion" />
    <result column="schoolOpinion" jdbcType="VARCHAR" property="schoolopinion" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hngy.educationaladministration.entity.BusinessWithBLOBs">
    <result column="classes" jdbcType="LONGVARCHAR" property="classes" />
    <result column="courseName" jdbcType="LONGVARCHAR" property="coursename" />
    <result column="textbookName" jdbcType="LONGVARCHAR" property="textbookname" />
    <result column="publishingUnitAndTime" jdbcType="LONGVARCHAR" property="publishingunitandtime" />
    <result column="other" jdbcType="LONGVARCHAR" property="other" />
    <result column="paperTitle" jdbcType="LONGVARCHAR" property="papertitle" />
    <result column="publishingSituation" jdbcType="LONGVARCHAR" property="publishingsituation" />
    <result column="cooperationUnit" jdbcType="LONGVARCHAR" property="cooperationunit" />
    <result column="awards" jdbcType="LONGVARCHAR" property="awards" />
    <result column="academicGroup" jdbcType="LONGVARCHAR" property="academicgroup" />
    <result column="ContinuingEducation" jdbcType="LONGVARCHAR" property="continuingeducation" />
    <result column="otherJobs" jdbcType="LONGVARCHAR" property="otherjobs" />
    <result column="bak1" jdbcType="LONGVARCHAR" property="bak1" />
    <result column="bak2" jdbcType="LONGVARCHAR" property="bak2" />
    <result column="bak3" jdbcType="LONGVARCHAR" property="bak3" />
    <result column="bak4" jdbcType="LONGVARCHAR" property="bak4" />
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, id_teacher, year, dateOfBirth, trem, theoryClass, guidingExperiment, guidingDesign, 
    guidingInternship, guideComprehensiveExperiment, totalClass, totalWorkload, chiefEditor, 
    jointlyEdited, planningTextbook, schoolBasedTextbook, level, ranking, hostSubject, 
    category, myRole, sick, compassionateLeave, beLate, leaveEarly, tuneClass, missingClass, 
    disciplinaryPenalty, teachingOpinion, departmentOpinion, schoolOpinion
  </sql>
  <sql id="Blob_Column_List">
    classes, courseName, textbookName, publishingUnitAndTime, other, paperTitle, publishingSituation, 
    cooperationUnit, awards, academicGroup, ContinuingEducation, otherJobs, bak1, bak2, 
    bak3, bak4, remark
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.hngy.educationaladministration.entity.BusinessExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_business
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.hngy.educationaladministration.entity.BusinessExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_business
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
      </otherwise>
    </choose>
    from t_business
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example != null and example.rows != null">
      <if test="example.offset != null">
        limit ${example.offset}, ${example.rows}
      </if>
      <if test="example.offset == null">
        limit ${example.rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_business
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
      </otherwise>
    </choose>
    from t_business
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_business
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hngy.educationaladministration.entity.BusinessExample">
    delete from t_business
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hngy.educationaladministration.entity.BusinessWithBLOBs">
    insert into t_business (id, id_teacher, year, 
      dateOfBirth, trem, theoryClass, 
      guidingExperiment, guidingDesign, guidingInternship, 
      guideComprehensiveExperiment, totalClass, 
      totalWorkload, chiefEditor, jointlyEdited, 
      planningTextbook, schoolBasedTextbook, 
      level, ranking, hostSubject, 
      category, myRole, sick, 
      compassionateLeave, beLate, leaveEarly, 
      tuneClass, missingClass, disciplinaryPenalty, 
      teachingOpinion, departmentOpinion, schoolOpinion, 
      classes, courseName, textbookName, 
      publishingUnitAndTime, other, paperTitle, 
      publishingSituation, cooperationUnit, 
      awards, academicGroup, ContinuingEducation, 
      otherJobs, bak1, bak2, 
      bak3, bak4, remark
      )
    values (#{id,jdbcType=BIGINT}, #{idTeacher,jdbcType=BIGINT}, #{year,jdbcType=VARCHAR}, 
      #{dateofbirth,jdbcType=VARCHAR}, #{trem,jdbcType=VARCHAR}, #{theoryclass,jdbcType=VARCHAR}, 
      #{guidingexperiment,jdbcType=VARCHAR}, #{guidingdesign,jdbcType=VARCHAR}, #{guidinginternship,jdbcType=VARCHAR}, 
      #{guidecomprehensiveexperiment,jdbcType=VARCHAR}, #{totalclass,jdbcType=VARCHAR}, 
      #{totalworkload,jdbcType=VARCHAR}, #{chiefeditor,jdbcType=VARCHAR}, #{jointlyedited,jdbcType=VARCHAR}, 
      #{planningtextbook,jdbcType=VARCHAR}, #{schoolbasedtextbook,jdbcType=VARCHAR}, 
      #{level,jdbcType=VARCHAR}, #{ranking,jdbcType=VARCHAR}, #{hostsubject,jdbcType=VARCHAR}, 
      #{category,jdbcType=VARCHAR}, #{myrole,jdbcType=VARCHAR}, #{sick,jdbcType=VARCHAR}, 
      #{compassionateleave,jdbcType=VARCHAR}, #{belate,jdbcType=INTEGER}, #{leaveearly,jdbcType=INTEGER}, 
      #{tuneclass,jdbcType=INTEGER}, #{missingclass,jdbcType=INTEGER}, #{disciplinarypenalty,jdbcType=INTEGER}, 
      #{teachingopinion,jdbcType=VARCHAR}, #{departmentopinion,jdbcType=VARCHAR}, #{schoolopinion,jdbcType=VARCHAR}, 
      #{classes,jdbcType=LONGVARCHAR}, #{coursename,jdbcType=LONGVARCHAR}, #{textbookname,jdbcType=LONGVARCHAR}, 
      #{publishingunitandtime,jdbcType=LONGVARCHAR}, #{other,jdbcType=LONGVARCHAR}, #{papertitle,jdbcType=LONGVARCHAR}, 
      #{publishingsituation,jdbcType=LONGVARCHAR}, #{cooperationunit,jdbcType=LONGVARCHAR}, 
      #{awards,jdbcType=LONGVARCHAR}, #{academicgroup,jdbcType=LONGVARCHAR}, #{continuingeducation,jdbcType=LONGVARCHAR}, 
      #{otherjobs,jdbcType=LONGVARCHAR}, #{bak1,jdbcType=LONGVARCHAR}, #{bak2,jdbcType=LONGVARCHAR}, 
      #{bak3,jdbcType=LONGVARCHAR}, #{bak4,jdbcType=LONGVARCHAR}, #{remark,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hngy.educationaladministration.entity.BusinessWithBLOBs">
    insert into t_business
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="idTeacher != null">
        id_teacher,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="dateofbirth != null">
        dateOfBirth,
      </if>
      <if test="trem != null">
        trem,
      </if>
      <if test="theoryclass != null">
        theoryClass,
      </if>
      <if test="guidingexperiment != null">
        guidingExperiment,
      </if>
      <if test="guidingdesign != null">
        guidingDesign,
      </if>
      <if test="guidinginternship != null">
        guidingInternship,
      </if>
      <if test="guidecomprehensiveexperiment != null">
        guideComprehensiveExperiment,
      </if>
      <if test="totalclass != null">
        totalClass,
      </if>
      <if test="totalworkload != null">
        totalWorkload,
      </if>
      <if test="chiefeditor != null">
        chiefEditor,
      </if>
      <if test="jointlyedited != null">
        jointlyEdited,
      </if>
      <if test="planningtextbook != null">
        planningTextbook,
      </if>
      <if test="schoolbasedtextbook != null">
        schoolBasedTextbook,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="ranking != null">
        ranking,
      </if>
      <if test="hostsubject != null">
        hostSubject,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="myrole != null">
        myRole,
      </if>
      <if test="sick != null">
        sick,
      </if>
      <if test="compassionateleave != null">
        compassionateLeave,
      </if>
      <if test="belate != null">
        beLate,
      </if>
      <if test="leaveearly != null">
        leaveEarly,
      </if>
      <if test="tuneclass != null">
        tuneClass,
      </if>
      <if test="missingclass != null">
        missingClass,
      </if>
      <if test="disciplinarypenalty != null">
        disciplinaryPenalty,
      </if>
      <if test="teachingopinion != null">
        teachingOpinion,
      </if>
      <if test="departmentopinion != null">
        departmentOpinion,
      </if>
      <if test="schoolopinion != null">
        schoolOpinion,
      </if>
      <if test="classes != null">
        classes,
      </if>
      <if test="coursename != null">
        courseName,
      </if>
      <if test="textbookname != null">
        textbookName,
      </if>
      <if test="publishingunitandtime != null">
        publishingUnitAndTime,
      </if>
      <if test="other != null">
        other,
      </if>
      <if test="papertitle != null">
        paperTitle,
      </if>
      <if test="publishingsituation != null">
        publishingSituation,
      </if>
      <if test="cooperationunit != null">
        cooperationUnit,
      </if>
      <if test="awards != null">
        awards,
      </if>
      <if test="academicgroup != null">
        academicGroup,
      </if>
      <if test="continuingeducation != null">
        ContinuingEducation,
      </if>
      <if test="otherjobs != null">
        otherJobs,
      </if>
      <if test="bak1 != null">
        bak1,
      </if>
      <if test="bak2 != null">
        bak2,
      </if>
      <if test="bak3 != null">
        bak3,
      </if>
      <if test="bak4 != null">
        bak4,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="idTeacher != null">
        #{idTeacher,jdbcType=BIGINT},
      </if>
      <if test="year != null">
        #{year,jdbcType=VARCHAR},
      </if>
      <if test="dateofbirth != null">
        #{dateofbirth,jdbcType=VARCHAR},
      </if>
      <if test="trem != null">
        #{trem,jdbcType=VARCHAR},
      </if>
      <if test="theoryclass != null">
        #{theoryclass,jdbcType=VARCHAR},
      </if>
      <if test="guidingexperiment != null">
        #{guidingexperiment,jdbcType=VARCHAR},
      </if>
      <if test="guidingdesign != null">
        #{guidingdesign,jdbcType=VARCHAR},
      </if>
      <if test="guidinginternship != null">
        #{guidinginternship,jdbcType=VARCHAR},
      </if>
      <if test="guidecomprehensiveexperiment != null">
        #{guidecomprehensiveexperiment,jdbcType=VARCHAR},
      </if>
      <if test="totalclass != null">
        #{totalclass,jdbcType=VARCHAR},
      </if>
      <if test="totalworkload != null">
        #{totalworkload,jdbcType=VARCHAR},
      </if>
      <if test="chiefeditor != null">
        #{chiefeditor,jdbcType=VARCHAR},
      </if>
      <if test="jointlyedited != null">
        #{jointlyedited,jdbcType=VARCHAR},
      </if>
      <if test="planningtextbook != null">
        #{planningtextbook,jdbcType=VARCHAR},
      </if>
      <if test="schoolbasedtextbook != null">
        #{schoolbasedtextbook,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="ranking != null">
        #{ranking,jdbcType=VARCHAR},
      </if>
      <if test="hostsubject != null">
        #{hostsubject,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="myrole != null">
        #{myrole,jdbcType=VARCHAR},
      </if>
      <if test="sick != null">
        #{sick,jdbcType=VARCHAR},
      </if>
      <if test="compassionateleave != null">
        #{compassionateleave,jdbcType=VARCHAR},
      </if>
      <if test="belate != null">
        #{belate,jdbcType=INTEGER},
      </if>
      <if test="leaveearly != null">
        #{leaveearly,jdbcType=INTEGER},
      </if>
      <if test="tuneclass != null">
        #{tuneclass,jdbcType=INTEGER},
      </if>
      <if test="missingclass != null">
        #{missingclass,jdbcType=INTEGER},
      </if>
      <if test="disciplinarypenalty != null">
        #{disciplinarypenalty,jdbcType=INTEGER},
      </if>
      <if test="teachingopinion != null">
        #{teachingopinion,jdbcType=VARCHAR},
      </if>
      <if test="departmentopinion != null">
        #{departmentopinion,jdbcType=VARCHAR},
      </if>
      <if test="schoolopinion != null">
        #{schoolopinion,jdbcType=VARCHAR},
      </if>
      <if test="classes != null">
        #{classes,jdbcType=LONGVARCHAR},
      </if>
      <if test="coursename != null">
        #{coursename,jdbcType=LONGVARCHAR},
      </if>
      <if test="textbookname != null">
        #{textbookname,jdbcType=LONGVARCHAR},
      </if>
      <if test="publishingunitandtime != null">
        #{publishingunitandtime,jdbcType=LONGVARCHAR},
      </if>
      <if test="other != null">
        #{other,jdbcType=LONGVARCHAR},
      </if>
      <if test="papertitle != null">
        #{papertitle,jdbcType=LONGVARCHAR},
      </if>
      <if test="publishingsituation != null">
        #{publishingsituation,jdbcType=LONGVARCHAR},
      </if>
      <if test="cooperationunit != null">
        #{cooperationunit,jdbcType=LONGVARCHAR},
      </if>
      <if test="awards != null">
        #{awards,jdbcType=LONGVARCHAR},
      </if>
      <if test="academicgroup != null">
        #{academicgroup,jdbcType=LONGVARCHAR},
      </if>
      <if test="continuingeducation != null">
        #{continuingeducation,jdbcType=LONGVARCHAR},
      </if>
      <if test="otherjobs != null">
        #{otherjobs,jdbcType=LONGVARCHAR},
      </if>
      <if test="bak1 != null">
        #{bak1,jdbcType=LONGVARCHAR},
      </if>
      <if test="bak2 != null">
        #{bak2,jdbcType=LONGVARCHAR},
      </if>
      <if test="bak3 != null">
        #{bak3,jdbcType=LONGVARCHAR},
      </if>
      <if test="bak4 != null">
        #{bak4,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hngy.educationaladministration.entity.BusinessExample" resultType="java.lang.Long">
    select count(*) from t_business
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_business
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.idTeacher != null">
        id_teacher = #{record.idTeacher,jdbcType=BIGINT},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=VARCHAR},
      </if>
      <if test="record.dateofbirth != null">
        dateOfBirth = #{record.dateofbirth,jdbcType=VARCHAR},
      </if>
      <if test="record.trem != null">
        trem = #{record.trem,jdbcType=VARCHAR},
      </if>
      <if test="record.theoryclass != null">
        theoryClass = #{record.theoryclass,jdbcType=VARCHAR},
      </if>
      <if test="record.guidingexperiment != null">
        guidingExperiment = #{record.guidingexperiment,jdbcType=VARCHAR},
      </if>
      <if test="record.guidingdesign != null">
        guidingDesign = #{record.guidingdesign,jdbcType=VARCHAR},
      </if>
      <if test="record.guidinginternship != null">
        guidingInternship = #{record.guidinginternship,jdbcType=VARCHAR},
      </if>
      <if test="record.guidecomprehensiveexperiment != null">
        guideComprehensiveExperiment = #{record.guidecomprehensiveexperiment,jdbcType=VARCHAR},
      </if>
      <if test="record.totalclass != null">
        totalClass = #{record.totalclass,jdbcType=VARCHAR},
      </if>
      <if test="record.totalworkload != null">
        totalWorkload = #{record.totalworkload,jdbcType=VARCHAR},
      </if>
      <if test="record.chiefeditor != null">
        chiefEditor = #{record.chiefeditor,jdbcType=VARCHAR},
      </if>
      <if test="record.jointlyedited != null">
        jointlyEdited = #{record.jointlyedited,jdbcType=VARCHAR},
      </if>
      <if test="record.planningtextbook != null">
        planningTextbook = #{record.planningtextbook,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolbasedtextbook != null">
        schoolBasedTextbook = #{record.schoolbasedtextbook,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=VARCHAR},
      </if>
      <if test="record.ranking != null">
        ranking = #{record.ranking,jdbcType=VARCHAR},
      </if>
      <if test="record.hostsubject != null">
        hostSubject = #{record.hostsubject,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.myrole != null">
        myRole = #{record.myrole,jdbcType=VARCHAR},
      </if>
      <if test="record.sick != null">
        sick = #{record.sick,jdbcType=VARCHAR},
      </if>
      <if test="record.compassionateleave != null">
        compassionateLeave = #{record.compassionateleave,jdbcType=VARCHAR},
      </if>
      <if test="record.belate != null">
        beLate = #{record.belate,jdbcType=INTEGER},
      </if>
      <if test="record.leaveearly != null">
        leaveEarly = #{record.leaveearly,jdbcType=INTEGER},
      </if>
      <if test="record.tuneclass != null">
        tuneClass = #{record.tuneclass,jdbcType=INTEGER},
      </if>
      <if test="record.missingclass != null">
        missingClass = #{record.missingclass,jdbcType=INTEGER},
      </if>
      <if test="record.disciplinarypenalty != null">
        disciplinaryPenalty = #{record.disciplinarypenalty,jdbcType=INTEGER},
      </if>
      <if test="record.teachingopinion != null">
        teachingOpinion = #{record.teachingopinion,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentopinion != null">
        departmentOpinion = #{record.departmentopinion,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolopinion != null">
        schoolOpinion = #{record.schoolopinion,jdbcType=VARCHAR},
      </if>
      <if test="record.classes != null">
        classes = #{record.classes,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.coursename != null">
        courseName = #{record.coursename,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.textbookname != null">
        textbookName = #{record.textbookname,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.publishingunitandtime != null">
        publishingUnitAndTime = #{record.publishingunitandtime,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.other != null">
        other = #{record.other,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.papertitle != null">
        paperTitle = #{record.papertitle,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.publishingsituation != null">
        publishingSituation = #{record.publishingsituation,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.cooperationunit != null">
        cooperationUnit = #{record.cooperationunit,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.awards != null">
        awards = #{record.awards,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.academicgroup != null">
        academicGroup = #{record.academicgroup,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.continuingeducation != null">
        ContinuingEducation = #{record.continuingeducation,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.otherjobs != null">
        otherJobs = #{record.otherjobs,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.bak1 != null">
        bak1 = #{record.bak1,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.bak2 != null">
        bak2 = #{record.bak2,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.bak3 != null">
        bak3 = #{record.bak3,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.bak4 != null">
        bak4 = #{record.bak4,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_business
    set id = #{record.id,jdbcType=BIGINT},
      id_teacher = #{record.idTeacher,jdbcType=BIGINT},
      year = #{record.year,jdbcType=VARCHAR},
      dateOfBirth = #{record.dateofbirth,jdbcType=VARCHAR},
      trem = #{record.trem,jdbcType=VARCHAR},
      theoryClass = #{record.theoryclass,jdbcType=VARCHAR},
      guidingExperiment = #{record.guidingexperiment,jdbcType=VARCHAR},
      guidingDesign = #{record.guidingdesign,jdbcType=VARCHAR},
      guidingInternship = #{record.guidinginternship,jdbcType=VARCHAR},
      guideComprehensiveExperiment = #{record.guidecomprehensiveexperiment,jdbcType=VARCHAR},
      totalClass = #{record.totalclass,jdbcType=VARCHAR},
      totalWorkload = #{record.totalworkload,jdbcType=VARCHAR},
      chiefEditor = #{record.chiefeditor,jdbcType=VARCHAR},
      jointlyEdited = #{record.jointlyedited,jdbcType=VARCHAR},
      planningTextbook = #{record.planningtextbook,jdbcType=VARCHAR},
      schoolBasedTextbook = #{record.schoolbasedtextbook,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=VARCHAR},
      ranking = #{record.ranking,jdbcType=VARCHAR},
      hostSubject = #{record.hostsubject,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=VARCHAR},
      myRole = #{record.myrole,jdbcType=VARCHAR},
      sick = #{record.sick,jdbcType=VARCHAR},
      compassionateLeave = #{record.compassionateleave,jdbcType=VARCHAR},
      beLate = #{record.belate,jdbcType=INTEGER},
      leaveEarly = #{record.leaveearly,jdbcType=INTEGER},
      tuneClass = #{record.tuneclass,jdbcType=INTEGER},
      missingClass = #{record.missingclass,jdbcType=INTEGER},
      disciplinaryPenalty = #{record.disciplinarypenalty,jdbcType=INTEGER},
      teachingOpinion = #{record.teachingopinion,jdbcType=VARCHAR},
      departmentOpinion = #{record.departmentopinion,jdbcType=VARCHAR},
      schoolOpinion = #{record.schoolopinion,jdbcType=VARCHAR},
      classes = #{record.classes,jdbcType=LONGVARCHAR},
      courseName = #{record.coursename,jdbcType=LONGVARCHAR},
      textbookName = #{record.textbookname,jdbcType=LONGVARCHAR},
      publishingUnitAndTime = #{record.publishingunitandtime,jdbcType=LONGVARCHAR},
      other = #{record.other,jdbcType=LONGVARCHAR},
      paperTitle = #{record.papertitle,jdbcType=LONGVARCHAR},
      publishingSituation = #{record.publishingsituation,jdbcType=LONGVARCHAR},
      cooperationUnit = #{record.cooperationunit,jdbcType=LONGVARCHAR},
      awards = #{record.awards,jdbcType=LONGVARCHAR},
      academicGroup = #{record.academicgroup,jdbcType=LONGVARCHAR},
      ContinuingEducation = #{record.continuingeducation,jdbcType=LONGVARCHAR},
      otherJobs = #{record.otherjobs,jdbcType=LONGVARCHAR},
      bak1 = #{record.bak1,jdbcType=LONGVARCHAR},
      bak2 = #{record.bak2,jdbcType=LONGVARCHAR},
      bak3 = #{record.bak3,jdbcType=LONGVARCHAR},
      bak4 = #{record.bak4,jdbcType=LONGVARCHAR},
      remark = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_business
    set id = #{record.id,jdbcType=BIGINT},
      id_teacher = #{record.idTeacher,jdbcType=BIGINT},
      year = #{record.year,jdbcType=VARCHAR},
      dateOfBirth = #{record.dateofbirth,jdbcType=VARCHAR},
      trem = #{record.trem,jdbcType=VARCHAR},
      theoryClass = #{record.theoryclass,jdbcType=VARCHAR},
      guidingExperiment = #{record.guidingexperiment,jdbcType=VARCHAR},
      guidingDesign = #{record.guidingdesign,jdbcType=VARCHAR},
      guidingInternship = #{record.guidinginternship,jdbcType=VARCHAR},
      guideComprehensiveExperiment = #{record.guidecomprehensiveexperiment,jdbcType=VARCHAR},
      totalClass = #{record.totalclass,jdbcType=VARCHAR},
      totalWorkload = #{record.totalworkload,jdbcType=VARCHAR},
      chiefEditor = #{record.chiefeditor,jdbcType=VARCHAR},
      jointlyEdited = #{record.jointlyedited,jdbcType=VARCHAR},
      planningTextbook = #{record.planningtextbook,jdbcType=VARCHAR},
      schoolBasedTextbook = #{record.schoolbasedtextbook,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=VARCHAR},
      ranking = #{record.ranking,jdbcType=VARCHAR},
      hostSubject = #{record.hostsubject,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=VARCHAR},
      myRole = #{record.myrole,jdbcType=VARCHAR},
      sick = #{record.sick,jdbcType=VARCHAR},
      compassionateLeave = #{record.compassionateleave,jdbcType=VARCHAR},
      beLate = #{record.belate,jdbcType=INTEGER},
      leaveEarly = #{record.leaveearly,jdbcType=INTEGER},
      tuneClass = #{record.tuneclass,jdbcType=INTEGER},
      missingClass = #{record.missingclass,jdbcType=INTEGER},
      disciplinaryPenalty = #{record.disciplinarypenalty,jdbcType=INTEGER},
      teachingOpinion = #{record.teachingopinion,jdbcType=VARCHAR},
      departmentOpinion = #{record.departmentopinion,jdbcType=VARCHAR},
      schoolOpinion = #{record.schoolopinion,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hngy.educationaladministration.entity.BusinessWithBLOBs">
    update t_business
    <set>
      <if test="idTeacher != null">
        id_teacher = #{idTeacher,jdbcType=BIGINT},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=VARCHAR},
      </if>
      <if test="dateofbirth != null">
        dateOfBirth = #{dateofbirth,jdbcType=VARCHAR},
      </if>
      <if test="trem != null">
        trem = #{trem,jdbcType=VARCHAR},
      </if>
      <if test="theoryclass != null">
        theoryClass = #{theoryclass,jdbcType=VARCHAR},
      </if>
      <if test="guidingexperiment != null">
        guidingExperiment = #{guidingexperiment,jdbcType=VARCHAR},
      </if>
      <if test="guidingdesign != null">
        guidingDesign = #{guidingdesign,jdbcType=VARCHAR},
      </if>
      <if test="guidinginternship != null">
        guidingInternship = #{guidinginternship,jdbcType=VARCHAR},
      </if>
      <if test="guidecomprehensiveexperiment != null">
        guideComprehensiveExperiment = #{guidecomprehensiveexperiment,jdbcType=VARCHAR},
      </if>
      <if test="totalclass != null">
        totalClass = #{totalclass,jdbcType=VARCHAR},
      </if>
      <if test="totalworkload != null">
        totalWorkload = #{totalworkload,jdbcType=VARCHAR},
      </if>
      <if test="chiefeditor != null">
        chiefEditor = #{chiefeditor,jdbcType=VARCHAR},
      </if>
      <if test="jointlyedited != null">
        jointlyEdited = #{jointlyedited,jdbcType=VARCHAR},
      </if>
      <if test="planningtextbook != null">
        planningTextbook = #{planningtextbook,jdbcType=VARCHAR},
      </if>
      <if test="schoolbasedtextbook != null">
        schoolBasedTextbook = #{schoolbasedtextbook,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="ranking != null">
        ranking = #{ranking,jdbcType=VARCHAR},
      </if>
      <if test="hostsubject != null">
        hostSubject = #{hostsubject,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="myrole != null">
        myRole = #{myrole,jdbcType=VARCHAR},
      </if>
      <if test="sick != null">
        sick = #{sick,jdbcType=VARCHAR},
      </if>
      <if test="compassionateleave != null">
        compassionateLeave = #{compassionateleave,jdbcType=VARCHAR},
      </if>
      <if test="belate != null">
        beLate = #{belate,jdbcType=INTEGER},
      </if>
      <if test="leaveearly != null">
        leaveEarly = #{leaveearly,jdbcType=INTEGER},
      </if>
      <if test="tuneclass != null">
        tuneClass = #{tuneclass,jdbcType=INTEGER},
      </if>
      <if test="missingclass != null">
        missingClass = #{missingclass,jdbcType=INTEGER},
      </if>
      <if test="disciplinarypenalty != null">
        disciplinaryPenalty = #{disciplinarypenalty,jdbcType=INTEGER},
      </if>
      <if test="teachingopinion != null">
        teachingOpinion = #{teachingopinion,jdbcType=VARCHAR},
      </if>
      <if test="departmentopinion != null">
        departmentOpinion = #{departmentopinion,jdbcType=VARCHAR},
      </if>
      <if test="schoolopinion != null">
        schoolOpinion = #{schoolopinion,jdbcType=VARCHAR},
      </if>
      <if test="classes != null">
        classes = #{classes,jdbcType=LONGVARCHAR},
      </if>
      <if test="coursename != null">
        courseName = #{coursename,jdbcType=LONGVARCHAR},
      </if>
      <if test="textbookname != null">
        textbookName = #{textbookname,jdbcType=LONGVARCHAR},
      </if>
      <if test="publishingunitandtime != null">
        publishingUnitAndTime = #{publishingunitandtime,jdbcType=LONGVARCHAR},
      </if>
      <if test="other != null">
        other = #{other,jdbcType=LONGVARCHAR},
      </if>
      <if test="papertitle != null">
        paperTitle = #{papertitle,jdbcType=LONGVARCHAR},
      </if>
      <if test="publishingsituation != null">
        publishingSituation = #{publishingsituation,jdbcType=LONGVARCHAR},
      </if>
      <if test="cooperationunit != null">
        cooperationUnit = #{cooperationunit,jdbcType=LONGVARCHAR},
      </if>
      <if test="awards != null">
        awards = #{awards,jdbcType=LONGVARCHAR},
      </if>
      <if test="academicgroup != null">
        academicGroup = #{academicgroup,jdbcType=LONGVARCHAR},
      </if>
      <if test="continuingeducation != null">
        ContinuingEducation = #{continuingeducation,jdbcType=LONGVARCHAR},
      </if>
      <if test="otherjobs != null">
        otherJobs = #{otherjobs,jdbcType=LONGVARCHAR},
      </if>
      <if test="bak1 != null">
        bak1 = #{bak1,jdbcType=LONGVARCHAR},
      </if>
      <if test="bak2 != null">
        bak2 = #{bak2,jdbcType=LONGVARCHAR},
      </if>
      <if test="bak3 != null">
        bak3 = #{bak3,jdbcType=LONGVARCHAR},
      </if>
      <if test="bak4 != null">
        bak4 = #{bak4,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hngy.educationaladministration.entity.BusinessWithBLOBs">
    update t_business
    set id_teacher = #{idTeacher,jdbcType=BIGINT},
      year = #{year,jdbcType=VARCHAR},
      dateOfBirth = #{dateofbirth,jdbcType=VARCHAR},
      trem = #{trem,jdbcType=VARCHAR},
      theoryClass = #{theoryclass,jdbcType=VARCHAR},
      guidingExperiment = #{guidingexperiment,jdbcType=VARCHAR},
      guidingDesign = #{guidingdesign,jdbcType=VARCHAR},
      guidingInternship = #{guidinginternship,jdbcType=VARCHAR},
      guideComprehensiveExperiment = #{guidecomprehensiveexperiment,jdbcType=VARCHAR},
      totalClass = #{totalclass,jdbcType=VARCHAR},
      totalWorkload = #{totalworkload,jdbcType=VARCHAR},
      chiefEditor = #{chiefeditor,jdbcType=VARCHAR},
      jointlyEdited = #{jointlyedited,jdbcType=VARCHAR},
      planningTextbook = #{planningtextbook,jdbcType=VARCHAR},
      schoolBasedTextbook = #{schoolbasedtextbook,jdbcType=VARCHAR},
      level = #{level,jdbcType=VARCHAR},
      ranking = #{ranking,jdbcType=VARCHAR},
      hostSubject = #{hostsubject,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      myRole = #{myrole,jdbcType=VARCHAR},
      sick = #{sick,jdbcType=VARCHAR},
      compassionateLeave = #{compassionateleave,jdbcType=VARCHAR},
      beLate = #{belate,jdbcType=INTEGER},
      leaveEarly = #{leaveearly,jdbcType=INTEGER},
      tuneClass = #{tuneclass,jdbcType=INTEGER},
      missingClass = #{missingclass,jdbcType=INTEGER},
      disciplinaryPenalty = #{disciplinarypenalty,jdbcType=INTEGER},
      teachingOpinion = #{teachingopinion,jdbcType=VARCHAR},
      departmentOpinion = #{departmentopinion,jdbcType=VARCHAR},
      schoolOpinion = #{schoolopinion,jdbcType=VARCHAR},
      classes = #{classes,jdbcType=LONGVARCHAR},
      courseName = #{coursename,jdbcType=LONGVARCHAR},
      textbookName = #{textbookname,jdbcType=LONGVARCHAR},
      publishingUnitAndTime = #{publishingunitandtime,jdbcType=LONGVARCHAR},
      other = #{other,jdbcType=LONGVARCHAR},
      paperTitle = #{papertitle,jdbcType=LONGVARCHAR},
      publishingSituation = #{publishingsituation,jdbcType=LONGVARCHAR},
      cooperationUnit = #{cooperationunit,jdbcType=LONGVARCHAR},
      awards = #{awards,jdbcType=LONGVARCHAR},
      academicGroup = #{academicgroup,jdbcType=LONGVARCHAR},
      ContinuingEducation = #{continuingeducation,jdbcType=LONGVARCHAR},
      otherJobs = #{otherjobs,jdbcType=LONGVARCHAR},
      bak1 = #{bak1,jdbcType=LONGVARCHAR},
      bak2 = #{bak2,jdbcType=LONGVARCHAR},
      bak3 = #{bak3,jdbcType=LONGVARCHAR},
      bak4 = #{bak4,jdbcType=LONGVARCHAR},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hngy.educationaladministration.entity.Business">
    update t_business
    set id_teacher = #{idTeacher,jdbcType=BIGINT},
      year = #{year,jdbcType=VARCHAR},
      dateOfBirth = #{dateofbirth,jdbcType=VARCHAR},
      trem = #{trem,jdbcType=VARCHAR},
      theoryClass = #{theoryclass,jdbcType=VARCHAR},
      guidingExperiment = #{guidingexperiment,jdbcType=VARCHAR},
      guidingDesign = #{guidingdesign,jdbcType=VARCHAR},
      guidingInternship = #{guidinginternship,jdbcType=VARCHAR},
      guideComprehensiveExperiment = #{guidecomprehensiveexperiment,jdbcType=VARCHAR},
      totalClass = #{totalclass,jdbcType=VARCHAR},
      totalWorkload = #{totalworkload,jdbcType=VARCHAR},
      chiefEditor = #{chiefeditor,jdbcType=VARCHAR},
      jointlyEdited = #{jointlyedited,jdbcType=VARCHAR},
      planningTextbook = #{planningtextbook,jdbcType=VARCHAR},
      schoolBasedTextbook = #{schoolbasedtextbook,jdbcType=VARCHAR},
      level = #{level,jdbcType=VARCHAR},
      ranking = #{ranking,jdbcType=VARCHAR},
      hostSubject = #{hostsubject,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      myRole = #{myrole,jdbcType=VARCHAR},
      sick = #{sick,jdbcType=VARCHAR},
      compassionateLeave = #{compassionateleave,jdbcType=VARCHAR},
      beLate = #{belate,jdbcType=INTEGER},
      leaveEarly = #{leaveearly,jdbcType=INTEGER},
      tuneClass = #{tuneclass,jdbcType=INTEGER},
      missingClass = #{missingclass,jdbcType=INTEGER},
      disciplinaryPenalty = #{disciplinarypenalty,jdbcType=INTEGER},
      teachingOpinion = #{teachingopinion,jdbcType=VARCHAR},
      departmentOpinion = #{departmentopinion,jdbcType=VARCHAR},
      schoolOpinion = #{schoolopinion,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.hngy.educationaladministration.entity.BusinessExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_business
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleWithBLOBs" parameterType="com.hngy.educationaladministration.entity.BusinessExample" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_business
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
      </otherwise>
    </choose>
    from t_business
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
</mapper>