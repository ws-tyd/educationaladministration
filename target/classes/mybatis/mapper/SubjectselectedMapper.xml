<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hngy.educationaladministration.mapper.SubjectselectedMapper">
  <resultMap id="BaseResultMap" type="com.hngy.educationaladministration.entity.Subjectselected">
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="id_student" jdbcType="BIGINT" property="idStudent"/>
    <result column="id_project" jdbcType="BIGINT" property="idProject"/>
    <result column="stuSelect_flag" jdbcType="BIGINT" property="stuselectFlag"/>
    <result column="projectName" property="project_name"/>
    <result column="stuNum" property="student_stuNum"/>
    <result column="teacherNames" property="project_teachers"/>
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hngy.educationaladministration.entity.Subjectselected">
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, id_student, id_project, stuSelect_flag
  </sql>
  <sql id="Blob_Column_List">
    remark
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.hngy.educationaladministration.entity.SubjectselectedExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_projectselected
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.hngy.educationaladministration.entity.SubjectselectedExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_projectselected
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_projectselected
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_projectselected
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hngy.educationaladministration.entity.SubjectselectedExample">
    delete from t_projectselected
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hngy.educationaladministration.entity.Subjectselected">
    insert into t_projectselected (id, id_student, id_project, 
      stuSelect_flag, remark)
    values (#{id,jdbcType=BIGINT}, #{idStudent,jdbcType=BIGINT}, #{idProject,jdbcType=BIGINT}, 
      #{stuselectFlag,jdbcType=BIGINT}, #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hngy.educationaladministration.entity.Subjectselected">
    insert into t_projectselected
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="idStudent != null">
        id_student,
      </if>
      <if test="idProject != null">
        id_project,
      </if>
      <if test="stuselectFlag != null">
        stuSelect_flag,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="idStudent != null">
        #{idStudent,jdbcType=BIGINT},
      </if>
      <if test="idProject != null">
        #{idProject,jdbcType=BIGINT},
      </if>
      <if test="stuselectFlag != null">
        #{stuselectFlag,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hngy.educationaladministration.entity.SubjectselectedExample" resultType="java.lang.Long">
    select count(*) from t_projectselected
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_projectselected
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.idStudent != null">
        id_student = #{record.idStudent,jdbcType=BIGINT},
      </if>
      <if test="record.idProject != null">
        id_project = #{record.idProject,jdbcType=BIGINT},
      </if>
      <if test="record.stuselectFlag != null">
        stuSelect_flag = #{record.stuselectFlag,jdbcType=BIGINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_projectselected
    set id = #{record.id,jdbcType=BIGINT},
      id_student = #{record.idStudent,jdbcType=BIGINT},
      id_project = #{record.idProject,jdbcType=BIGINT},
      stuSelect_flag = #{record.stuselectFlag,jdbcType=BIGINT},
      remark = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_projectselected
    set id = #{record.id,jdbcType=BIGINT},
      id_student = #{record.idStudent,jdbcType=BIGINT},
      id_project = #{record.idProject,jdbcType=BIGINT},
      stuSelect_flag = #{record.stuselectFlag,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hngy.educationaladministration.entity.Subjectselected">
    update t_projectselected
    <set>
      <if test="idStudent != null">
        id_student = #{idStudent,jdbcType=BIGINT},
      </if>
      <if test="idProject != null">
        id_project = #{idProject,jdbcType=BIGINT},
      </if>
      <if test="stuselectFlag != null">
        stuSelect_flag = #{stuselectFlag,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hngy.educationaladministration.entity.Subjectselected">
    update t_projectselected
    set id_student = #{idStudent,jdbcType=BIGINT},
      id_project = #{idProject,jdbcType=BIGINT},
      stuSelect_flag = #{stuselectFlag,jdbcType=BIGINT},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hngy.educationaladministration.entity.Subjectselected">
    update t_projectselected
    set id_student = #{idStudent,jdbcType=BIGINT},
      id_project = #{idProject,jdbcType=BIGINT},
      stuSelect_flag = #{stuselectFlag,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>



  <select id="select_Projectselected" resultMap="BaseResultMap">
    SELECT
    t_projectselected.id,
    t_projectselected.id_student,
    t_projectselected.id_project,
    t_projectselected.stuSelect_flag,
    t_project.projectName,
    t_project.teacherNames,
    t_student.stuNum
    FROM
    t_projectselected
    INNER JOIN t_project ON t_projectselected.id_project = t_project.id
    INNER JOIN t_student ON t_projectselected.id_student = t_student.id
    <where>
      <if test="student_id != null and student_id !=''">
        t_projectselected.id_student =#{student_id}
      </if>
      <if test="project_id != null and project_id !=''">
        or t_projectselected.id_project =#{project_id}
      </if>
    </where>
  </select>




</mapper>