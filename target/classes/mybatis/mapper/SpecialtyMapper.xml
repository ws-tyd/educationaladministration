<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hngy.educationaladministration.mapper.SpecialtyMapper">
  <resultMap id="BaseResultMap" type="com.hngy.educationaladministration.entity.Specialty">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="specialty_name" jdbcType="VARCHAR" property="specialtyName" />
    <result column="id_section" jdbcType="BIGINT" property="idSection" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hngy.educationaladministration.entity.Specialty">
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, specialty_name, id_section
  </sql>
  <sql id="Blob_Column_List">
    remark
  </sql>

  <select id="select_specialty" resultMap="BaseResultMap">
    SELECT
    t_specialty.id,
    t_specialty.specialty_name,
    t_specialty.id_section,
    t_specialty.remark,
    t_section.section_name,
    t_institute.institute_name
    FROM
    t_specialty
    INNER JOIN t_section ON t_specialty.id_section = t_section.id
    INNER JOIN t_institute ON t_section.id_institute = t_institute.id
    <where>
      <if test="institute_id != null and institute_id !=0">
        t_institute.id =#{institute_id}
      </if>
      <if test="section_id != null and section_id !=''">
        and t_section.id =#{section_id}
      </if>
      <if test="specialty_name != null and specialty_name !=''">
        and t_specialty.specialty_name =#{specialty_name}
      </if>
      <if test="specialty_id != null and specialty_id !=''">
        and t_specialty.id =#{specialty_id}
      </if>
    </where>
  </select>

  <select id="selectByExampleWithBLOBs" parameterType="com.hngy.educationaladministration.entity.SpecialtyExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_specialty
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.hngy.educationaladministration.entity.SpecialtyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_specialty
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
      </otherwise>
    </choose>
    from t_specialty
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example != null and example.rows != null">
      <if test="example.offset != null">
        limit ${example.offset}, ${example.rows}
      </if>
      <if test="example.offset == null">
        limit ${example.rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_specialty
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
      </otherwise>
    </choose>
    from t_specialty
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_specialty
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hngy.educationaladministration.entity.SpecialtyExample">
    delete from t_specialty
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hngy.educationaladministration.entity.Specialty">
    insert into t_specialty (id, specialty_name, id_section, 
      remark)
    values (#{id,jdbcType=BIGINT}, #{specialtyName,jdbcType=VARCHAR}, #{idSection,jdbcType=BIGINT}, 
      #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hngy.educationaladministration.entity.Specialty">
    insert into t_specialty
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="specialtyName != null">
        specialty_name,
      </if>
      <if test="idSection != null">
        id_section,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="specialtyName != null">
        #{specialtyName,jdbcType=VARCHAR},
      </if>
      <if test="idSection != null">
        #{idSection,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hngy.educationaladministration.entity.SpecialtyExample" resultType="java.lang.Long">
    select count(*) from t_specialty
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_specialty
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.specialtyName != null">
        specialty_name = #{record.specialtyName,jdbcType=VARCHAR},
      </if>
      <if test="record.idSection != null">
        id_section = #{record.idSection,jdbcType=BIGINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_specialty
    set id = #{record.id,jdbcType=BIGINT},
      specialty_name = #{record.specialtyName,jdbcType=VARCHAR},
      id_section = #{record.idSection,jdbcType=BIGINT},
      remark = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_specialty
    set id = #{record.id,jdbcType=BIGINT},
      specialty_name = #{record.specialtyName,jdbcType=VARCHAR},
      id_section = #{record.idSection,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hngy.educationaladministration.entity.Specialty">
    update t_specialty
    <set>
      <if test="specialtyName != null">
        specialty_name = #{specialtyName,jdbcType=VARCHAR},
      </if>
      <if test="idSection != null">
        id_section = #{idSection,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hngy.educationaladministration.entity.Specialty">
    update t_specialty
    set specialty_name = #{specialtyName,jdbcType=VARCHAR},
      id_section = #{idSection,jdbcType=BIGINT},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hngy.educationaladministration.entity.Specialty">
    update t_specialty
    set specialty_name = #{specialtyName,jdbcType=VARCHAR},
      id_section = #{idSection,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>