<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hngy.educationaladministration.mapper.ClassMapper">
    <resultMap id="BaseResultMap" type="com.hngy.educationaladministration.entity.Class">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="class_name" jdbcType="VARCHAR" property="className"/>
        <result column="id_specialty" jdbcType="BIGINT" property="idSpecialty"/>

        <result column="institute_name" property="institute_name"/>
        <result column="section_name" property="section_name"/>
        <result column="specialty_name" property="specialty_name"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hngy.educationaladministration.entity.Class">
        <result column="remark" jdbcType="LONGVARCHAR" property="remark"/>
    </resultMap>

    <select id="select_class" resultMap="BaseResultMap">
        SELECT
        t_class.id,
        t_class.class_name,
        t_class.id_specialty,
        t_section.section_name,
        t_institute.institute_name,
        t_specialty.specialty_name
        FROM
        t_section
        INNER JOIN t_institute ON t_section.id_institute = t_institute.id
        INNER JOIN t_specialty ON t_specialty.id_section = t_section.id
        INNER JOIN t_class ON t_class.id_specialty = t_specialty.id
        <where>
            <if test="institute_id != null and institute_id !=0">
                t_institute.id =#{institute_id}
            </if>
            <if test="section_id != null and section_id !=''">
                and t_section.id =#{section_id}
            </if>
            <if test="specialty_id != null and specialty_id !=''">
                and t_specialty.id =#{specialty_id}
            </if>
            <if test="class_name != null and class_name !=''">
                and t_class.class_name =#{class_name}
            </if>
            <if test="class_id != null and class_id !=''">
                and t_class.id =#{class_id}
            </if>
        </where>
    </select>


    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, class_name, id_specialty
  </sql>
    <sql id="Blob_Column_List">
    remark
  </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.hngy.educationaladministration.entity.ClassExample" resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_class
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.hngy.educationaladministration.entity.ClassExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_class
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_class
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_class
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.hngy.educationaladministration.entity.ClassExample">
        delete from t_class
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.hngy.educationaladministration.entity.Class">
    insert into t_class (id, class_name, id_specialty,
      remark)
    values (#{id,jdbcType=BIGINT}, #{className,jdbcType=VARCHAR}, #{idSpecialty,jdbcType=BIGINT},
      #{remark,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.hngy.educationaladministration.entity.Class">
        insert into t_class
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="className != null">
                class_name,
            </if>
            <if test="idSpecialty != null">
                id_specialty,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="className != null">
                #{className,jdbcType=VARCHAR},
            </if>
            <if test="idSpecialty != null">
                #{idSpecialty,jdbcType=BIGINT},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.hngy.educationaladministration.entity.ClassExample" resultType="java.lang.Long">
        select count(*) from t_class
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_class
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.className != null">
                class_name = #{record.className,jdbcType=VARCHAR},
            </if>
            <if test="record.idSpecialty != null">
                id_specialty = #{record.idSpecialty,jdbcType=BIGINT},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update t_class
        set id = #{record.id,jdbcType=BIGINT},
        class_name = #{record.className,jdbcType=VARCHAR},
        id_specialty = #{record.idSpecialty,jdbcType=BIGINT},
        remark = #{record.remark,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_class
        set id = #{record.id,jdbcType=BIGINT},
        class_name = #{record.className,jdbcType=VARCHAR},
        id_specialty = #{record.idSpecialty,jdbcType=BIGINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.hngy.educationaladministration.entity.Class">
        update t_class
        <set>
            <if test="className != null">
                class_name = #{className,jdbcType=VARCHAR},
            </if>
            <if test="idSpecialty != null">
                id_specialty = #{idSpecialty,jdbcType=BIGINT},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hngy.educationaladministration.entity.Class">
    update t_class
    set class_name = #{className,jdbcType=VARCHAR},
      id_specialty = #{idSpecialty,jdbcType=BIGINT},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.hngy.educationaladministration.entity.Class">
    update t_class
    set class_name = #{className,jdbcType=VARCHAR},
      id_specialty = #{idSpecialty,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="select_class_by_ids" parameterType="Long" resultType="com.hngy.educationaladministration.entity.Class">
        select * from t_class where id in
        <foreach collection="classIds" item="class" open="(" separator="," close=")">
            #{class}
        </foreach>
    </select>
</mapper>

